name: Tagging And Publish
on:
  pull_request:
    types:
      - closed

permissions: {}

jobs:
  tagging-and-publish:
    if: github.event.pull_request.merged == true && github.base_ref == 'main' && github.head_ref == 'changeset-release/main'
    permissions:
      contents: write # to create release (changesets/action)
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set git user
        run: |
          git config --global user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config --global user.email "$(git --no-pager log --format=format:'%ae' -n 1)"

      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Install Dependencies
        run: npm ci

      - name: Get tag version
        id: get-tag-version
        run: |
          VERSION=$(cat ./package.json | grep -m 1 version | sed 's/[^0-9.]//g')
          NEW_TAG=v$VERSION
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo '::set-output name=newTag::'$NEW_TAG
          echo '::set-output name=version::'$VERSION
          echo "New release tag is $NEW_TAG"

      - name: Check should create release
        id: should-create-tag
        run: |
          if [ $(git tag -l "$NEW_TAG") ]; then
            echo '::set-output name=NEW_TAG_EXISTS::true'
          else
            echo '::set-output name=NEW_TAG_EXISTS::false'
          fi

      - name: Build
        run: npm run build

      - name: Release package
        if: steps.should-create-tag.outputs.NEW_TAG_EXISTS == 'false'
        uses: changesets/action@v1
        with:
          publish: npm run changeset tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract release notes
        if: steps.should-create-tag.outputs.NEW_TAG_EXISTS == 'false'
        id: extract-release-notes
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: '${{ steps.get-tag-version.outputs.version }}'
          doNotFailIfNotFound: true

      - name: Create tag
        if: steps.extract-release-notes.outputs.body != ''
        run: |
          git tag -a $NEW_TAG -m "chore(release): $NEW_TAG [skip ci]"
          git push origin $NEW_TAG
          echo "Create tag success: $NEW_TAG"

      - name: Create Release
        if: steps.extract-release-notes.outputs.body != ''
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ steps.extract-release-notes.outputs.body }}
          tag_name: ${{ steps.get-tag-version.outputs.newTag }}
          draft: false
          prerelease: false
